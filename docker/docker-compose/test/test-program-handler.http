


// curl -X 'POST' \
// 'https://localhost:5001/items' \
//-H 'accept: text/plain' \
//-H 'Content-Type: application/json' \
// -d '{
//"name": "string",
//"price": 1000
//}'



GET http://localhost:1026/version

###
GET http://localhost:1026/v2

### Query entity
GET http://localhost:1026/v2/entities

### Query entity non exists
GET http://localhost:1026/v2/entities/Room1

### Entity creation
POST http://localhost:1026/v2/entities/
content-type: application/json

{

    "id": "Blasius3",
    "type": "Program",
    "name": 
    {
     "value": "blasius3",
      "type": "String"
    },
    "versionOnRobot": 
    {
      "value" : 1,
      "type": "Float"
    }

}

### Entity creation
POST http://localhost:1026/v2/entities/
content-type: application/json

{

  "name": "Program1",
  "price" : 242

}


### Update Entity
PATCH http://localhost:1026/v2/entities/Blasius3/attrs
content-type: application/json

{
 "name": 
    {
     "value": "blasius3",
     "type": "String"
    },
    "versionOnRobot": 
    {
      "value" : 6,
      "type": "Float"
    }
}



### Add subscription to entity (https://quantumleap.readthedocs.io/en/latest/user/using/#orion-subscription)
POST http://localhost:1026/v2/subscriptions
content-type: application/json

{
    "description": "Test subscription",
    "subject": {
        "entities": [
        {
            "idPattern": ".*",
            "type": "Program"
        }
        ],
        "condition": {
            "attrs": [
            "versionOnRobot"
            ]
        }
    },
    "notification": {
        "http": {
            "url": "http://host.docker.internal:5011/v2/entities"
        },
        "attrs": [],
        "metadata": ["dateCreated", "dateModified"]
    }
}

### check subscriptions
GET http://localhost:1026/v2/subscriptions


# PLC
### Entity creation
POST http://localhost:1026/v2/entities/
content-type: application/json

{
  "id": "Blasius1",
  "type": "Program",
  "version": {
    "value": 0,
    "type": "Float"
  },
  "name": {
    "value": "blasius1.src",
    "type": "String"
  }
}

{
  "id": "RPHS_X",
  "type": "RPHS_API",
  "request": {
    "method": "POST",
    "url": "http://RPHC/v1/Program/xyz.src"
  }
}

API RPHC/
@route(/v1/<program>/<file>), method['POST']
save file

@route(/v1/<program>/<file>), method['GET']
return file 

API RPHS/
@route(/v1/<program>/<file>), method['POST']
save file

@route(/v1/<program>/<file>), method['GET']
return file 

PROGRAM RPHS send
r = request('POST', http://RPHC/v1/Program/xyz.src)

PROGRAM RPHS get
file = request('GET', http://RPHC/v1/Program/xyz.src)
save file

### Query entity, test Program
GET http://localhost:1026/v2/entities/Blasius1/?type=Program

### Query entity, test Version
GET http://localhost:1026/v2/entities/Blasius1/attrs/version
