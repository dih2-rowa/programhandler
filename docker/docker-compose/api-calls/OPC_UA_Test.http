# curl http://localhost:4001/iot/devices \
#      -H "fiware-service: opcua opcua_car" \
#      -H "fiware-servicepath: /test/demo" \
#      -H "Content-Type: application/json" \
#      -d @add_device_NGSIv2.json

## OPC UA Client
###
GET http://localhost:4001/iot/devices
fiware-service: robot_info 
fiware-servicepath: /demo

###
POST http://localhost:4001/iot/devices
fiware-service: robot_info
fiware-servicepath: /demo
Content-Type: application/json

{
    "devices": [
    {
      "device_id": "Robot1",
      "service": "robot_info",
      "service_path": "/demo",
      "entity_name": "Robot1",
      "entity_type": "Order",
      "endpoint": "opc.tcp://192.168.1.10:4840",
      "attributes": [
        {
          "object_id": "ProductID",
          "name": "ProductID",
          "type": "String"
        },
        {
          "object_id": "planParts",
          "name": "planParts",
          "type": "Number"
        },
        {
          "object_id": "prodParts",
          "name": "prodParts",
          "type": "Number"
        },
        {
          "object_id": "startTime",
          "name": "startTime",
          "type": "String"
        },
        {
          "object_id": "finishedTime",
          "name": "finishedTime",
          "type": "String"
        }
      ],
      "lazy": [],
      "commands": [
        {
          "object_id": "ns=3;s=\"writeOrderstatus_DB\".Method",
          "name": "writeOrderstatus",
          "type": "command"
        }],
      "static_attributes": []
    }]
}

## OCB
### Query entity
GET http://localhost:1026/v2/entities/
fiware-service: robot_info 
fiware-servicepath: /demo

### Query entity by id
GET http://localhost:1026/v2/entities/MyObject/
fiware-service: robot_info 
fiware-servicepath: /demo

### Query entity by attrs
GET http://localhost:1026/v2/entities/MyObject/attrs/
fiware-service: robot_info 
fiware-servicepath: /demo

# Subscription verwenden um die Werte automatische bei einer Fiware Wert aednerung auch auf der SPS zu aendern
# Http von der Subscription muss dann wh PUT aufruf sein (http://iotage-order:4001/op/update evtl. interesante uri fuer put (context broker log))
# Andere Moeglichkeit waere von Programm handler gleichzeitig mit fiware update put zu context broker schreiben
### Update Entity Order
PUT http://localhost:1026/v2/entities/Robot1/attrs/writeOrderstatus?type=Order
fiware-service: robot_info 
fiware-servicepath: /demo
content-type: application/json

{
   "value": ["good","test","test2","test3","test4","test5"],
   "type": "command"
}

### Query entity
GET http://localhost:1026/v2/subscriptions
fiware-service: robot_info
fiware-servicepath: /demo

### Query registration
GET http://localhost:1026/v2/registrations
fiware-service: robot_info 
fiware-servicepath: /demo


### Add subscription to entity (https://quantumleap.readthedocs.io/en/latest/user/using/#orion-subscription)
# POST http://localhost:1026/v2/subscriptions
# content-type: application/json
# fiware-service: opcua opcua_car
# fiware-servicepath: /test/demo

# {
#     "description": "Test subscription",
#     "subject": {
#         "entities": [
#         {
#             "idPattern": ".*",
#             "type": "Robot"
#         }
#         ],
#         "condition": {
#             "attrs": ["Wert"]
#         }
#     },
#     "notification": {
#         "http": {
#             "url": "http://quantumleap:8668/v2/notify"
#         },
#         "attrs": [],
#         "metadata": ["dateCreated", "dateModified"]
#     }
# }