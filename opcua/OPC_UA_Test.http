### Should not be needed
POST http://localhost:4001/iot/devices
fiware-service: robot_info
fiware-servicepath: /demo
Content-Type: application/json

{
    "devices": [
    {
      "device_id": "Robot1",
      "service": "robot_info",
      "service_path": "/demo",
      "entity_name": "Robot1",
      "entity_type": "Order",
      "endpoint": "opc.tcp://192.168.1.10:4840",
      "attributes": [
        {
          "object_id": "ProductID",
          "name": "ProductID",
          "type": "String"
        },
        {
          "object_id": "planParts",
          "name": "planParts",
          "type": "Number"
        },
        {
          "object_id": "prodParts",
          "name": "prodParts",
          "type": "Number"
        },
        {
          "object_id": "startTime",
          "name": "startTime",
          "type": "String"
        },
        {
          "object_id": "finishedTime",
          "name": "finishedTime",
          "type": "String"
        }
      ],
      "lazy": [],
      "commands": [
        {
          "object_id": "ns=3;s=\"writeOrderstatus_DB\".Method",
          "name": "writeOrderstatus",
          "type": "command"
        }],
      "static_attributes": []
    }]
}



### IOT entities
GET http://localhost:4007/iot/devices/
fiware-service: robot_info
fiware-servicepath: /demo

### Query entity
GET http://localhost:1026/v2/entities/
fiware-service: robot_info
fiware-servicepath: /demo


### Update Entity
PATCH http://localhost:1026/v2/entities/Robot1/attrs
fiware-service: robot_info
fiware-servicepath: /demo
content-type: application/json

{
  "Wert": {
    "value": 1,
    "type": "command"
  }
}

### Execute OPC-UA Method
PUT http://localhost:1026/v2/entities/Robot1/attrs/writeProductstatus?type=Product
fiware-service: robot_info 
fiware-servicepath: /demo
content-type: application/json

{
"value": ["-","MY83_9G921","MY83_9G921",1,1,0 ,0],
   "type": "command"
}

### Execute OPC-UA Method
PUT http://localhost:1026/v2/entities/Robot1/attrs/writeOrderstatus?type=Order
fiware-service: robot_info 
fiware-servicepath: /demo
content-type: application/json

{
   "value": ["robotVersiohhmer","tegjdst255","ttteasdst3",262,1,2,33],
   "type": "command"
}


### Query subscriptions
GET http://localhost:1026/v2/subscriptions
fiware-service: robot_info
fiware-servicepath: /demo


### Query registrations
GET http://localhost:1026/v2/registrations
fiware-service: robot_info
fiware-servicepath: /demo


### Add subscription to entity (https://quantumleap.readthedocs.io/en/latest/user/using/#orion-subscription)
POST http://localhost:1026/v2/subscriptions
content-type: application/json
fiware-service: robot_info
fiware-servicepath: /demo

{
    "description": "Test subscription",
    "subject": {
        "entities": [
        {
            "idPattern": ".*",
            "type": "OrderReq"
        }
        ],
        "condition": {
            "attrs": [] 
        }
    },
    "notification": {
        "http": {
            "url": "http://quantumleap:8668/v2/notify"
        },
        "attrs": [],
        "metadata": ["dateCreated", "dateModified"]
    }
}


### Add subscription for order Request
POST http://localhost:1026/v2/subscriptions
content-type: application/json
fiware-service: robot_info
fiware-servicepath: /demo

{
    "description": "Get order relevant data with orderID",
    "subject": {
        "entities": [
        {
            "idPattern": ".*",
            "type": "OrderReq"
        }
        ],
        "condition": {
            "attrs": [] 
        }
    },
    "notification": {
        "http": {
            "url": "http://quantumleap:8668/v2/notify"
        },
        "attrs": [],
        "metadata": ["dateCreated", "dateModified"]
    }
}

### Add subscription for version Request
POST http://localhost:1026/v2/subscriptions
content-type: application/json
fiware-service: robot_info
fiware-servicepath: /demo

{
    "description": "Send version request",
    "subject": {
        "entities": [
        {
            "idPattern": ".*",
            "type": "VersionReq"
        }
        ],
        "condition": {
            "attrs": [] 
        }
    },
    "notification": {
        "http": {
            "url": "http://host.docker.internal:5011/notification/VersionReq"
        },
        "attrs": [],
        "metadata": ["dateCreated", "dateModified"]
    }
}

### Add subscription for Order Request
POST http://localhost:1026/v2/subscriptions
content-type: application/json
fiware-service: robot_info
fiware-servicepath: /demo

{
    "description": "Send version request",
    "subject": {
        "entities": [
        {
            "idPattern": ".*",
            "type": "OrderReq"
        }
        ],
        "condition": {
            "attrs": [] 
        }
    },
    "notification": {
        "http": {
            "url": "http://host.docker.internal:5011/notification/OrderReq"
        },
        "attrs": [],
        "metadata": ["dateCreated", "dateModified"]
    }
}

### Send trigger for program transfer Server --> Robot
POST http://localhost:1026/v2/subscriptions
content-type: application/json
fiware-service: robot_info
fiware-servicepath: /demo

{
    "description": "Send trigger for program transfer Server -- Robot",
    "subject": {
        "entities": [
        {
            "idPattern": ".*",
            "type": "ServToRobReq"
        }
        ],
        "condition": {
            "attrs": [] 
        }
    },
    "notification": {
        "http": {
            "url": "http://host.docker.internal:5011/notification/ServerToRobot"
        },
        "attrs": [],
        "metadata": ["dateCreated", "dateModified"]
    }
}

### Send trigger for program transfer Robot --> Server
POST http://localhost:1026/v2/subscriptions
content-type: application/json
fiware-service: robot_info
fiware-servicepath: /demo

{
    "description": "Send trigger for program transfer Robot -- Server",
    "subject": {
        "entities": [
        {
            "idPattern": ".*",
            "type": "RobToServReq"
        }
        ],
        "condition": {
            "attrs": [] 
        }
    },
    "notification": {
        "http": {
            "url": "http://host.docker.internal:5011/notification/RobotToServer"
        },
        "attrs": [],
        "metadata": ["dateCreated", "dateModified"]
    }
}
